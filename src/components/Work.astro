---
import Highlighted from "@components/Highlighted.astro";
import Section from "@components/Section.astro";
import { Work } from "@schemas/Resume";

export type Props = Work;

const {
  endDate,
  highlights,
  name,
  position,
  projects,
  skills,
  startDate,
  summary,
} = Astro.props as Props;

const formatDate = (dateString?: string) => dateString?.replaceAll("-", "/");

const workDuration = `${formatDate(startDate)} ⟶ ${
  formatDate(endDate) ?? "Present"
}`;
---

<Section>
  <div class="header">
    <Highlighted variant="dark">
      <h3 class="position">{position}</h3>
      <h3>{name}</h3>
    </Highlighted>
    <h4 class="subtitle">
      {workDuration}
    </h4>
  </div>

  <pre>{summary}</pre>

  {(highlights?.length ?? 0) > 0 && (
    <div class="list">
      <div>Highlights</div>
      <ul>
        {highlights?.map((highlight) => (
          <li>{highlight}</li>
        ))}
      </ul>
    </div>
  )}

  {(projects?.length ?? 0) > 0 && (
    <div class="list">
      <div>Projects</div>
      <ul>
        {projects?.map((project) => (
          <li>{project}</li>
        ))}
      </ul>
    </div>
  )}

  {(skills?.length ?? 0) > 0 && (
    <div class="inline-list">
      <span>Skills</span>
      {skills?.map((skill, i) => (
        <>
          <span>{skill}</span>
          {i < skills.length - 1 && <span>•</span>}
        </>
      ))}
    </div>
  )}
</Section>

<style>
  .header {
    display: flex;
    flex-direction: column;
    justify-content: start;
    gap: var(--spacing-s);
  }

  .position {
    color: var(--color-highlight);
  }

  .subtitle {
    font-weight: 200;
  }

  pre {
    line-height: 1.3;
    white-space: pre-wrap;
  }

  .list {
    display: flex;
    flex-direction: column;
    justify-content: start;
    gap: var(--spacing-s);
  }

  .inline-list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-s);
    font-weight: 200;
  }

  .list > :first-child,
  .inline-list > :first-child {
    font-weight: 600;
  }
</style>
