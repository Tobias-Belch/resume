name: CI/CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist
            node_modules

  deploy:
    needs: test
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  generate_pdf:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgbm-dev wget
          npm install puppeteer
      - name: Generate PDF with Puppeteer
        run: |
          node -e "
            const puppeteer = require('puppeteer');
            (async () => {
              try {
                const browser = await puppeteer.launch({
                  args: ['--no-sandbox', '--disable-setuid-sandbox']
                });
                const page = await browser.newPage();
                await page.goto('file://${{ github.workspace }}/dist/index.html', { 
                  waitUntil: 'networkidle0',
                  timeout: 30000
                });
                await page.pdf({ 
                  path: 'resume-puppeteer.pdf',
                  format: 'A4',
                  printBackground: true,
                  margin: { top: '20mm', right: '20mm', bottom: '20mm', left: '20mm' }
                });
                await browser.close();
                console.log('PDF generated successfully');
              } catch (error) {
                console.error('Error generating PDF:', error);
                process.exit(1);
              }
            })();
          "
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Add resume-puppeteer.pdf"
          file_pattern: "resume-puppeteer.pdf"
